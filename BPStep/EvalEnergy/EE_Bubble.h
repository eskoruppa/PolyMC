#ifndef __EE_BUBBLE_INCLUDED__
#define __EE_BUBBLE_INCLUDED__

#include "../EvalEnergy.h"

class EE_Bubble;

class EE_Bubble: public EvalEnergy
{
//////////////////////////////////////////////////////////////////////////////////
// member variables //////////////////////////////////////////////////////////////
protected:
    double    factor;
    // arma::mat stiffmat;

    int current_state, proposed_state;
    bool stateswitch_pending; 

    arma::mat current_stiffmat;
    double    current_stateenergy; 

    arma::mat proposed_stiffmat;
    double    proposed_stateenergy; 

    arma::mat state1_stiffmat, state2_stiffmat;
    double    state1_stateenergy, state2_stateenergy;

    double interface_energy;

public:
////////////////////////////////////////////////////////////////////////////////////
/////// constructor / destructor ///////////////////////////////////////////////////
    EE_Bubble(const std::vector<double> & params,double disc_len, double temp, bool is_diag);
    ~EE_Bubble();


////////////////////////////////////////////////////////////////////////////////////
/////////////////   main   /////////////////////////////////////////////////////////
    double cal_beta_energy_diag(const arma::colvec & Theta);
    double cal_beta_energy_offdiag(const arma::colvec & Theta1, const arma::colvec & Theta2);
////////////////////////////////////////////////////////////////////////////////////
/////////////////   stateswitch   //////////////////////////////////////////////////
    void propose_stateswitch(int new_state);
    void set_switch(bool accepted); 
////////////////////////////////////////////////////////////////////////////////////
/////////////////  setters /////////////////////////////////////////////////////////
    void set_temp(double temp);
    void set_params(const std::vector<double> & new_params);
    void set_current_stiffmat();

    void deactivate_twist_energy();
    void reactivate_twist_energy();

////////////////////////////////////////////////////////////////////////////////////
/////////////////  getters /////////////////////////////////////////////////////////
    arma::mat get_cov();
    bool isotropic_bending();
    double get_interface_energy();

};

#endif
